version: 0.2

phases:
        install:
                commands:
                        - aws --version
                        - git --version

        pre_build:
                commands:
                        - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 096387456865.dkr.ecr.eu-central-1.amazonaws.com
                        - ARN=$(aws ecs list-container-instances --cluster task20 --query containerInstanceArns[*] --output text)
                        - echo $ARN
                        - INSTANCE_ID=$(aws ecs describe-container-instances --cluster task20 --container-instances $ARN --query 'containerInstances[*].ec2InstanceId' --output text)
                        - echo $INSTANCE_ID
                        - INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)

        build:
                commands:
                        - pwd
                        - ls -la
                        - sed -i 's/127.0.0.1/'$INSTANCE_IP'/g' nginx/html/index.html
                        - docker build -t 096387456865.dkr.ecr.eu-central-1.amazonaws.com/apache apache/
                        - docker build -t 096387456865.dkr.ecr.eu-central-1.amazonaws.com/nginx nginx/

        post_build:
                commands:
                        - docker push 096387456865.dkr.ecr.eu-central-1.amazonaws.com/apache
                        - docker push 096387456865.dkr.ecr.eu-central-1.amazonaws.com/nginx
                        - aws ecs register-task-definition --cli-input-json file://task20-td.json
                        - TASK_ID=$(aws ecs list-tasks --cluster task20 --desired-status RUNNING --family task20 --region eu-central-1 | grep "task" | tr "/" " " | tr "[" " " |  awk '{print $3}' | sed 's/"//')
                        - TASK_REVISION=$(aws ecs describe-task-definition --task-definition task20 --region eu-central-1 | grep "revision" | tr "/" " " | awk '{print $2}' | sed 's/,//')
                        - aws ecs update-service --cluster task20 --service task20-service --task-definition task20:${TASK_REVISION} --desired-count 1 --region eu-central-1 --force-new-deployment
                        - aws ecs stop-task --cluster task20 --task ${TASK_ID}
                        - aws cloudfront create-invalidation --distribution-id E2MXLXBYZDSB9L --paths "nginx/html/index.html"
